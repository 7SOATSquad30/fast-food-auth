name: Deploy or Destroy

on:
  workflow_dispatch:
    inputs:
      destroy_flag:
        description: 'Flag to trigger destroy'
        required: true
        default: "false"

jobs:
  prepare:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 3: Install Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: List files in infra directory
        run: ls -R ./infra

  deploy:
    runs-on: ubuntu-latest
    needs: prepare
    if: github.event.inputs.destroy_flag == 'false'

    steps:
      # Step 4: Initialize Terraform with the remote backend
      - name: Terraform Init
        run: terraform init
        working-directory: ${{ github.workspace }}/infra

      # Step 5: Apply Terraform to create resources
      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ${{ github.workspace }}/infra

  destroy:
    runs-on: ubuntu-latest
    needs: prepare
    if: github.event.inputs.destroy_flag == 'true'

    steps:
      - name: List root directory
        run: ls -R /home/runner/work/fast-food-auth/fast-food-auth

      # Step 4: Initialize Terraform with the remote backend
      - name: Terraform Init
        run: terraform init
        working-directory: ${{ github.workspace }}/infra

      # Step 5: Destroy Terraform for clean up resources
      - name: Terraform Destroy (Clean up resources)
        run: terraform destroy -auto-approve
        working-directory: ${{ github.workspace }}/infra
